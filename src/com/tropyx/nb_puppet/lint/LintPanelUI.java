/*
 * Copyright (C) 2014 mkleint
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.tropyx.nb_puppet.lint;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JCheckBox;
import org.netbeans.api.project.Project;
import org.netbeans.spi.project.AuxiliaryProperties;
import org.netbeans.spi.project.ui.support.ProjectCustomizer;

/**
 *
 * @author mkleint
 */
public class LintPanelUI extends javax.swing.JPanel {
    private AuxiliaryProperties prefs;

    /**
     * Creates new form LintPanelUI
     */
    public LintPanelUI() {
        initComponents();
    }

    LintPanelUI(ProjectCustomizer.Category category, Project project) {
        this();
        category.setOkButtonListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                doSave();
            }

        });
        prefs = project.getLookup().lookup(AuxiliaryProperties.class);
        for (LintCheck v : LintCheck.values()) {
            String enable = prefs.get("lint." + v.name(), true);
            if (enable == null) {
                enable = "true";
            }
            final JCheckBox jCheckBox = new JCheckBox(v.getDisplayName(), Boolean.parseBoolean(enable));
            jCheckBox.putClientProperty("lint", v);
            jCheckBox.putClientProperty("wasEnabled", enable);
            plnChecks.add(jCheckBox);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        plnChecks = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        plnChecks.setLayout(new java.awt.GridLayout(LintCheck.values().length, 1));
        jScrollPane1.setViewportView(plnChecks);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(LintPanelUI.class, "LintPanelUI.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(210, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel plnChecks;
    // End of variables declaration//GEN-END:variables

    private void doSave() {
        for (Component a : plnChecks.getComponents()) {
            if (a instanceof JCheckBox) {
                JCheckBox aa = (JCheckBox)a;
                String wasEnabled = (String) aa.getClientProperty("wasEnabled");
                LintCheck en = (LintCheck) aa.getClientProperty("lint");
                if (!wasEnabled.equals(Boolean.toString(aa.isSelected()))) {
                    prefs.put("lint." + en.name(), Boolean.toString(aa.isSelected()), true);
                }
            }
        }
    }

}
